name: 'Extensive Tests'

on:
  workflow_dispatch:

env:
  POETRY_VERSION: '1.8.4'

jobs:
  tests:
    name: 'Run Extensive Tests'

    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11', '3.12' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # just the latest commit and not whole history
          submodules: false

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Define a cache for the virtual environment based on the dependencies from lock file
        id: cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install project dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install the project
        run: poetry install --no-interaction

      - name: Run all tests
        run: poetry run poe citest

